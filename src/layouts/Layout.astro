---
interface Props {
  title: string;
}

const { title } = Astro.props;
import LoadingScreen from '../components/LoadingScreen.astro';
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link href="https://api.tomtom.com/maps-sdk-web-js/5.x/5.68.1/maps/maps.css" rel="stylesheet" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      import axios from 'axios';
      import Toastify from 'toastify-js';

      function showLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        loadingScreen.classList.remove('hidden');
      }
      function hideLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        loadingScreen.classList.add('hidden');
      }
      // showLoadingScreen();
      hideLoadingScreen();

      //Function to retrieve cookies from browser using javascript
      function getCookies() {
        let cookies = {};
        let allCookies = document.cookie;
        if (allCookies === '') {
          return cookies;
        }

        let cookieArray = allCookies.split(';');
        for (let cookie of cookieArray) {
          let [name, value] = cookie.split('=');
          name = name.trim();
          value = value ? value.trim() : '';
          cookies[name] = decodeURIComponent(value);
        }
        return cookies;
      }

      function getCookieByName(name) {
        let cookies = getCookies();
        return cookies[name] || null;
      }

      function checkLogin() {
        const hashID = getCookieByName('hashID');
        const userID = getCookieByName('userID');
        if (!hashID || !userID) {
          // window.location.href = '/';
        } else {
          axios
            .get('http://localhost:8000/backend/auth/checkCurrentSession.php', {
              withCredentials: true,
            })
            .then(function (response) {
              console.log(response.data);
              if (response.data.success === false) {
              } else if (response.data.success === true) {
                window.location.href = '/home';
              }
            })
            .catch(function (error) {
              console.log(error);
            });
        }
      }
      checkLogin();

      // Both 'hashID' and 'loggedIn' are not empty
    </script>
  </head>
  <body>
    <LoadingScreen />
    <slot />
  </body>
</html>
